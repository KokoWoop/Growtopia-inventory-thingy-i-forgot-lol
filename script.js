const MAX_STACK_SIZE = 250, MAX_SLOTS = 30, items = { chemB: { name: "Chemical B", src: "./sprites/chemB.png" }, chemG: { name: "Chemical G", src: "./sprites/chemG.png" }, chemicalLaboratory: { name: "Chemical Laboratory", src: "./sprites/chemicalLaboratory.png" }, chemP: { name: "Chemical P", src: "./sprites/chemP.png" }, chemR: { name: "Chemical R", src: "./sprites/chemR.png" }, chemY: { name: "Chemical Y", src: "./sprites/chemY.png" }, combover: { name: "Combover", src: "./sprites/combover.png" }, deathRay: { name: "Death Ray", src: "./sprites/deathRay.png" }, labCoat: { name: "Lab Coat", src: "./sprites/labCoat.png" }, scienceStation: { name: "Science Station", src: "./sprites/scienceStation.png" }, zeGoggles: { name: "Ze Goggles", src: "./sprites/zeGoggles.png" }, sidewalk: { name: "Sidewalk", src: "./sprites/sidewalk.png" }, streetSign: { name: "Street Sign", src: "./sprites/streetSign.png" }, streetLamp: { name: "Street Lamp", src: "./sprites/streetLamp.png" }, gothicBuilding: { name: "Gothic Building", src: "./sprites/gothicBuilding.png" }, tenementBuilding: { name: "Tenement Building", src: "./sprites/tenementBuilding.png" }, fireEscape: { name: "Fire Escape", src: "./sprites/fireEscape.png" }, hedge: { name: "Hedge", src: "./sprites/hedge.png" }, blueMailbox: { name: "Blue Mailbox", src: "./sprites/blueMailbox.png" }, gargoyle: { name: "Gargoyle", src: "./sprites/gargoyle.png" }, fireHydrant: { name: "Fire Hydrant", src: "./sprites/fireHydrant.png" }, atmMachine: { name: "ATM Machine", src: "./sprites/atmMachine.png" }, surgE: { name: "Surg-E", src: "./sprites/surgE.png" }, anesthetic: { name: "Surgical Anesthetic", src: "./sprites/anesthetic.png" }, antibiotics: { name: "Surgical Antibiotics", src: "./sprites/antibiotics.png" }, antiseptic: { name: "Surgical Antiseptic", src: "./sprites/antiseptic.png" }, clamp: { name: "Surgical Clamp", src: "./sprites/clamp.png" }, defibrillator: { name: "Surgical Defibrillator", src: "./sprites/defibrillator.png" }, labKit: { name: "Surgical Lab Kit", src: "./sprites/labKit.png" }, pins: { name: "Surgical Pins", src: "./sprites/pins.png" }, scalpel: { name: "Surgical Scalpel", src: "./sprites/scalpel.png" }, splint: { name: "Surgical Splint", src: "./sprites/splint.png" }, sponge: { name: "Surgical Sponge", src: "./sprites/sponge.png" }, stitches: { name: "Surgical Stitches", src: "./sprites/stitches.png" }, transfusion: { name: "Surgical Transfusion", src: "./sprites/transfusion.png" }, ultrasound: { name: "Surgical Ultrasound", src: "./sprites/ultrasound.png" }, blueGemLock: { name: "Blue Gem Lock", src: "./sprites/blueGemLock.png" }, diamondLock: { name: "Diamond Lock", src: "./sprites/diamondLock.png" }, worldLock: { name: "World Lock", src: "./sprites/worldLock.png" }, builderLock: { name: "Builder Lock", src: "./sprites/builderLock.png" }, hugeLock: { name: "Huge Lock", src: "./sprites/hugeLock.png" }, bigLock: { name: "Big Lock", src: "./sprites/bigLock.png" }, smallLock: { name: "Small Lock", src: "./sprites/smallLock.png" }, emeraldLock: { name: "Emerald Lock", src: "./sprites/emeraldLock.png" }, rubyLock: { name: "Ruby Lock", src: "./sprites/rubyLock.png" }, bunnyLock: { name: "Bunny Lock", src: "./sprites/bunnyLock.png" } }, inventory = Array(30).fill(null), packs = { madScientistPack: { name: "Mad Scientist Pack", items: { scienceStation: 1, chemicalLaboratory: 1, labCoat: 1, combover: 1, zeGoggles: 1, deathRay: 1, chemR: 5, chemG: 10, chemY: 5, chemB: 5, chemP: 5 } }, cityPack: { name: "City Pack", items: { sidewalk: 10, streetSign: 3, streetLamp: 3, gothicBuilding: 10, tenementBuilding: 10, fireEscape: 10, hedge: 10, blueMailbox: 1, gargoyle: 3, fireHydrant: 1, atmMachine: 1 } }, surgicalKit: { name: "Surgical Kit", items: { surgE: 1, anesthetic: 5, antibiotics: 5, antiseptic: 5, clamp: 5, defibrillator: 5, labKit: 5, pins: 5, scalpel: 5, splint: 5, sponge: 5, stitches: 5, transfusion: 5, ultrasound: 5 } } }; document.addEventListener("DOMContentLoaded", function () { let e = document.getElementById("inventory"), n = document.getElementById("item-input"), t = document.getElementById("suggestions"), i = document.getElementById("add-item-btn"), a = document.getElementById("amount-input"), s = document.getElementById("pack-select"), r = document.getElementById("pack-amount-input"), c = document.getElementById("add-pack-btn"); function l() { e.innerHTML = "", inventory.forEach(n => { let t = document.createElement("div"); if (t.className = "slot", n) { let i = document.createElement("img"); i.src = n.src, t.appendChild(i); let a = document.createElement("span"); a.textContent = n.amount, t.appendChild(a) } e.appendChild(t) }) } function o(e, n) { let t = inventory.findIndex(n => n && n.name === items[e].name); if (-1 !== t) { let i = inventory[t].amount + n; if (i > 250) return alert(`Cannot add more than 250 of ${items[e].name}!`), !1; i <= 0 ? inventory[t] = null : inventory[t].amount = i } else { if (n <= 0) return alert("Item amount must be greater than 0!"), !1; let a = inventory.findIndex(e => null === e); if (-1 === a) return alert("Inventory is full!"), !1; inventory[a] = { ...items[e], amount: n } } return !0 } function m(e) { for (let n in e.items) o(n, e.items[n]); l() } a.addEventListener("input", function () { let e = parseInt(a.value, 10); isNaN(e) || e < 1 ? a.value = 1 : e > 250 && (a.value = 250) }), n.addEventListener("input", function () { let e = n.value.toLowerCase(); t.innerHTML = "", Object.keys(items).forEach(i => { if (items[i].name.toLowerCase().includes(e)) { let a = document.createElement("div"); a.className = "suggestion", a.textContent = items[i].name, a.addEventListener("click", function () { n.value = items[i].name, t.innerHTML = "" }), t.appendChild(a) } }) }), i.addEventListener("click", function () { let e = n.value, t = parseInt(a.value, 10), i = Object.keys(items).find(n => items[n].name === e); if (!i) { alert("Item not found!"); return } if (isNaN(t) || t < 1 || t > 250) { alert("Please enter a valid amount between 1 and 250."); return } o(i, t) && l() }), Object.keys(packs).forEach(e => { let n = document.createElement("option"); n.value = e, n.textContent = packs[e].name, s.appendChild(n) }), c.addEventListener("click", function () { let e = Array.from(s.selectedOptions).map(e => e.value), n = parseInt(r.value, 10); if (e.length > 0 && !isNaN(n) && n > 0) { let t = e.map(e => ({ pack: packs[e], quantity: n })); (function e(n) { let t = {}, i = inventory.filter(e => null === e).length; for (let { pack: a, quantity: s } of (console.log("Starting inventory check..."), console.log("Initial available slots:", i), console.log("Initial inventory state:", JSON.stringify(inventory, null, 2)), n)) for (let r in console.log(`Checking pack: ${a.name}, Quantity: ${s}`), a.items) { let c = a.items[r] * s; console.log(`Checking item: ${items[r].name}, Total to add: ${c}`); let l = inventory.findIndex(e => e && e.name === items[r].name); if (-1 !== l) { let o = 250 - inventory[l].amount; if (console.log(`Existing stack found. Remaining space: ${o}`), c > o) return console.log(`Error: Adding ${c} of ${items[r].name} exceeds stack limit. Canceling operation.`), alert(`Cannot add ${s} of ${a.name} because it would exceed the max stack size for ${items[r].name}. Operation canceled.`), !1; t[r] = (t[r] || 0) + c - o } else console.log("No existing stack found. Item will require new slots."), t[r] = (t[r] || 0) + c } console.log("Required slots by item:", JSON.stringify(t, null, 2)); let m = 0; for (let p in t) { let g = Math.ceil(t[p] / 250); m += g } return (console.log("Total required slots:", m), console.log("Available slots:", i), i < m) ? (console.log("Error: Not enough slots in inventory. Canceling operation."), alert("Not enough free slots in inventory to purchase these packs. Operation canceled."), !1) : (console.log("Inventory check passed. Proceeding with addition."), !0) })(t) && t.forEach(e => { for (let n = 0; n < e.quantity; n++)m(e.pack) }) } else alert("Please select at least one pack and enter a valid number of packs to add.") }), l() });